version: '3.8'

services:
  whatsapp-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: whatsapp-microservice-api
    ports:
      - "5000:5000"
      - "5001:5001"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:5000
      - ConnectionStrings__RulesEngineDatabase=${SUPABASE_CONNECTION_STRING}
      - Supabase__Url=${SUPABASE_URL}
      - Supabase__AnonKey=${SUPABASE_ANON_KEY}
      - Supabase__ServiceKey=${SUPABASE_SERVICE_KEY}
      - Redis__ConnectionString=redis:6379
    depends_on:
      - redis
    volumes:
      - whatsapp-sessions:/app/sessions
    restart: unless-stopped
    networks:
      - whatsapp-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s

  redis:
    image: redis:7-alpine
    container_name: whatsapp-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - whatsapp-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: whatsapp-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx-certs:/etc/nginx/certs
    depends_on:
      - whatsapp-api
    restart: unless-stopped
    networks:
      - whatsapp-network

volumes:
  whatsapp-sessions:
    driver: local
  redis-data:
    driver: local
  nginx-certs:
    driver: local

networks:
  whatsapp-network:
    driver: bridge