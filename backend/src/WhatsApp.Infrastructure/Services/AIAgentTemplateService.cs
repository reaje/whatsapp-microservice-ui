using WhatsApp.Core.Models;

namespace WhatsApp.Infrastructure.Services;

/// <summary>
/// Servi√ßo que fornece templates pr√©-configurados de agentes de IA
/// </summary>
public class AIAgentTemplateService
{
    /// <summary>
    /// Obt√©m todos os templates dispon√≠veis
    /// </summary>
    public List<AIAgentTemplate> GetAllTemplates()
    {
        return new List<AIAgentTemplate>
        {
            new AIAgentTemplate
            {
                Id = "atendimento_geral",
                Name = "Atendimento Geral",
                Type = "atendimento",
                Description = "Agente para atendimento ao cliente com perguntas frequentes",
                Icon = "ü§ù",
                Configuration = new
                {
                    greeting = "Ol√°! Sou o assistente de atendimento. Como posso ajud√°-lo hoje?",
                    model = "gpt-3.5-turbo",
                    temperature = 0.7,
                    max_tokens = 150,
                    system_prompt = "Voc√™ √© um assistente de atendimento ao cliente. Seja educado, prestativo e direto nas respostas."
                },
                UseCases = new[]
                {
                    "Responder perguntas frequentes",
                    "Direcionar clientes para departamentos",
                    "Fornecer informa√ß√µes sobre produtos/servi√ßos"
                }
            },
            new AIAgentTemplate
            {
                Id = "vendas",
                Name = "Assistente de Vendas",
                Type = "vendas",
                Description = "Agente especializado em vendas e apresenta√ß√£o de produtos",
                Icon = "üí∞",
                Configuration = new
                {
                    greeting = "Ol√°! Estou aqui para ajud√°-lo a encontrar o produto perfeito. O que voc√™ est√° procurando?",
                    model = "gpt-3.5-turbo",
                    temperature = 0.8,
                    max_tokens = 200,
                    system_prompt = "Voc√™ √© um vendedor experiente. Foque em entender as necessidades do cliente e apresentar solu√ß√µes que se adequem. Seja persuasivo mas n√£o invasivo."
                },
                UseCases = new[]
                {
                    "Apresentar produtos e servi√ßos",
                    "Identificar necessidades do cliente",
                    "Fechar vendas e negocia√ß√µes",
                    "Fornecer informa√ß√µes sobre pre√ßos e condi√ß√µes"
                }
            },
            new AIAgentTemplate
            {
                Id = "suporte_tecnico",
                Name = "Suporte T√©cnico",
                Type = "suporte",
                Description = "Agente para resolu√ß√£o de problemas t√©cnicos",
                Icon = "üîß",
                Configuration = new
                {
                    greeting = "Ol√°! Sou o suporte t√©cnico. Por favor, descreva o problema que voc√™ est√° enfrentando.",
                    model = "gpt-4",
                    temperature = 0.5,
                    max_tokens = 300,
                    system_prompt = "Voc√™ √© um especialista em suporte t√©cnico. Fa√ßa perguntas espec√≠ficas para diagnosticar problemas. Forne√ßa solu√ß√µes passo a passo de forma clara."
                },
                UseCases = new[]
                {
                    "Diagnosticar problemas t√©cnicos",
                    "Fornecer solu√ß√µes passo a passo",
                    "Escalar tickets complexos",
                    "Documentar incidentes"
                }
            },
            new AIAgentTemplate
            {
                Id = "agendamento",
                Name = "Agendamento de Consultas",
                Type = "agendamento",
                Description = "Agente para marcar e gerenciar agendamentos",
                Icon = "üìÖ",
                Configuration = new
                {
                    greeting = "Ol√°! Posso ajud√°-lo a agendar uma consulta. Qual data e hor√°rio voc√™ prefere?",
                    model = "gpt-3.5-turbo",
                    temperature = 0.6,
                    max_tokens = 150,
                    system_prompt = "Voc√™ √© um assistente de agendamento. Colete informa√ß√µes necess√°rias: data, hor√°rio, tipo de servi√ßo e dados de contato. Confirme sempre os detalhes antes de finalizar."
                },
                UseCases = new[]
                {
                    "Agendar consultas e compromissos",
                    "Verificar disponibilidade",
                    "Reagendar ou cancelar",
                    "Enviar lembretes"
                }
            },
            new AIAgentTemplate
            {
                Id = "cobranca",
                Name = "Assistente Financeiro",
                Type = "cobranca",
                Description = "Agente para cobran√ßas e quest√µes financeiras",
                Icon = "üí≥",
                Configuration = new
                {
                    greeting = "Ol√°! Posso ajud√°-lo com quest√µes sobre pagamentos e faturas. Em que posso auxiliar?",
                    model = "gpt-3.5-turbo",
                    temperature = 0.5,
                    max_tokens = 150,
                    system_prompt = "Voc√™ √© um assistente financeiro. Seja profissional ao tratar de cobran√ßas. Forne√ßa informa√ß√µes sobre pagamentos, faturas e op√ß√µes de parcelamento."
                },
                UseCases = new[]
                {
                    "Enviar lembretes de pagamento",
                    "Informar sobre faturas vencidas",
                    "Negociar condi√ß√µes de pagamento",
                    "Fornecer segunda via de boletos"
                }
            },
            new AIAgentTemplate
            {
                Id = "feedback",
                Name = "Coletor de Feedback",
                Type = "feedback",
                Description = "Agente para coletar avalia√ß√µes e feedbacks",
                Icon = "‚≠ê",
                Configuration = new
                {
                    greeting = "Ol√°! Gostar√≠amos de saber sua opini√£o sobre nosso atendimento. Como foi sua experi√™ncia?",
                    model = "gpt-3.5-turbo",
                    temperature = 0.7,
                    max_tokens = 100,
                    system_prompt = "Voc√™ √© um coletor de feedback. Fa√ßa perguntas sobre a experi√™ncia do cliente, seja emp√°tico com cr√≠ticas e agrade√ßa por elogios. Colete informa√ß√µes espec√≠ficas."
                },
                UseCases = new[]
                {
                    "Coletar avalia√ß√µes p√≥s-atendimento",
                    "Medir satisfa√ß√£o do cliente",
                    "Identificar pontos de melhoria",
                    "Registrar reclama√ß√µes e elogios"
                }
            },
            new AIAgentTemplate
            {
                Id = "faq",
                Name = "Perguntas Frequentes",
                Type = "faq",
                Description = "Agente com respostas pr√©-definidas para perguntas comuns",
                Icon = "‚ùì",
                Configuration = new
                {
                    greeting = "Ol√°! Tenho respostas para as perguntas mais comuns. O que voc√™ gostaria de saber?",
                    model = "gpt-3.5-turbo",
                    temperature = 0.3,
                    max_tokens = 120,
                    system_prompt = "Voc√™ tem acesso a uma base de conhecimento de perguntas frequentes. Forne√ßa respostas precisas e consistentes. Se n√£o souber a resposta, direcione para atendimento humano."
                },
                UseCases = new[]
                {
                    "Responder perguntas frequentes",
                    "Fornecer informa√ß√µes sobre hor√°rios e localiza√ß√£o",
                    "Explicar pol√≠ticas e procedimentos",
                    "Direcionar para recursos espec√≠ficos"
                }
            },
            new AIAgentTemplate
            {
                Id = "multilingual",
                Name = "Atendimento Multil√≠ngue",
                Type = "atendimento",
                Description = "Agente que atende em m√∫ltiplos idiomas",
                Icon = "üåç",
                Configuration = new
                {
                    greeting = "Hello! Ol√°! Hola! How can I help you? / Como posso ajud√°-lo?",
                    model = "gpt-4",
                    temperature = 0.7,
                    max_tokens = 150,
                    supported_languages = new[] { "pt", "en", "es", "fr" },
                    system_prompt = "Voc√™ √© um assistente multil√≠ngue. Detecte o idioma do cliente e responda no mesmo idioma. Seja natural e culturalmente apropriado."
                },
                UseCases = new[]
                {
                    "Atender clientes internacionais",
                    "Traduzir informa√ß√µes automaticamente",
                    "Adaptar respostas culturalmente",
                    "Expandir mercado global"
                }
            }
        };
    }

    /// <summary>
    /// Obt√©m um template espec√≠fico por ID
    /// </summary>
    public AIAgentTemplate? GetTemplateById(string templateId)
    {
        return GetAllTemplates().FirstOrDefault(t => t.Id == templateId);
    }

    /// <summary>
    /// Obt√©m templates por tipo
    /// </summary>
    public List<AIAgentTemplate> GetTemplatesByType(string type)
    {
        return GetAllTemplates().Where(t => t.Type.Equals(type, StringComparison.OrdinalIgnoreCase)).ToList();
    }
}
